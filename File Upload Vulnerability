# File Upload Vulnerability
One of the most common vulnerability that we find on the websites that are given for the bug bounty programs is File Upload Vulnerability. 

# What is file upload vulnerability?
Whenever there is an option to upload any file type on website it can be anything For e.g. jpeg,php,shell etc,etc.

And Whenever we upload the file on website that has a malicious script encoded in it it can very harmful for the website as it can create a backdoor in the website and can execute
remote connection from the website in your pc which is very critical bug because you will now have the access to all the private folders and files that is present on the 
website it can be user's credentials and personal banking details and more information related to the work of the website.

# How can we find this kind of vulnerability on a testing website?
First, check for any file uploading options inside the website and if found then try to upload to the malicious php file (it can be any file extension even in a image)
if it gets uploaded in the website try to get the remote connection to your pc and if its not uploaded in the website (we will disscuss about this later).


# What are the different kind of file upload vulnerability that can be found on the website?
The first one is the normal one I don't know it by the names but I have understood the concept behind it.
If we talk about the worst scenario, if you will upload a shell or php file directly on the website it will be uploaded and you will get the path you requested for.

# Second Type of Vulnerability 
In this type of file upload vulnerability the website checks for the content type of the file which you uploaded but it doesn't directly checks for the file type or extension 
instead it checks for the content type when you will upload a file on the website and intercept the request with burp you will see a line saying Content Type = image/ jpeg 
if the website isn't configured properly it will trust this request and will let you to upload the file on the website. Hence, It's Exploited.

# Third type of Vulnerability 
The third type of vulnerability is the path triaversal vulnerability. Basically, when u upload a file on the website it gets stored on the website on a particular path 
that lets you execute the file but what if the path is mot enabled to execute then what can we do in this scenario. Simply we will change the path of the uploaded file
but doesn't that sound challenging if u ask me No. It doesn't sound challenging because there is a trick by which you can triaverse the path of the file uploaded just by
putting ../ or %2f(filename) this will triaverse the path currently I know only these tricks to triaverse the path because I learned it from portswigger labs they only 
taught me this much.

# Fourth Type of Vulnerability
The fourth type of Vulnerability is when the website is configured to only allow jpg or png or image files only then this trick is used to manipulate the website simply
if I tell you this in short I will say that for example if you are uploading a php file to the website it will not upload the website detected the php extension of the file
but if you will rename the file like this file.php.jpg | file.php.;.jpg | file.p.phphp you can see now the file is converted to an image file type but will it work 
and if yes then how will it work. So, now the website will upload the file succesfully to website by seeing the now the file is an image instead of a php file type
and the website will automatically strip the jpg extension and the file will become php file so basically the website is renaming the file and removing the extension 
but we gave our file two extension jpg and php. The website removes the jpg extension and renames the file to php extension now if you try to access your file through the
URL your file will be directly executed and It's exploited.

# Fifth Type oF Vulnerability 
When the webstie has a level of security, but still it has some flaws and the flaw is that it prevents the php file to be executed directly on the website so what it 
does is. You might be able to upload the file but your file will not be executed so to execute the file first we upload a file with a .htaccess file extension 
and change it's content type to plain/text and then we upload our php file and change it's extension from php to l33t and now it will be executed easily.

# Sixth Type of Vulnerability
Remote code execution by polygot image file so basically if the website if properly configured u can't exploit that website just by the vulnerability given above because 
the website checks each and every point of file upload vulnerability
So, the website will check for the dimesnions of the uploaded image and the dimensions of the image starts with FF Df 9T something like this so to exploiut this of 
vulnerability you have to encode a malicious script inside the php file and when the website will check for the image uploaded. The website will consider it as a image
let you upload the image on website and the remote execution will possible now on the webiste.
To create a image encoded script on the php file you need to download a exiftool from github. What it will do is it will create a image encoded script You will get the 
command to create the image file from the github website.

# Seventh Type of Vulnerability
Race Condition (Not Properly Understood by me but still)
In this vulnerability we have to send two request at the same to the website and due to same request at same time the website will not able to stop both files from being 
executed at one time and then the remote code execution will be possible.
